{"remainingRequest":"/Users/robin/Desktop/心航/vue-web/admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/robin/Desktop/心航/vue-web/admin/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/robin/Desktop/心航/vue-web/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/robin/Desktop/心航/vue-web/admin/src/components/index/IndexAsideStatic.vue?vue&type=template&id=0175fa3e&scoped=true","dependencies":[{"path":"/Users/robin/Desktop/心航/vue-web/admin/src/components/index/IndexAsideStatic.vue","mtime":1736155371000},{"path":"/Users/robin/Desktop/心航/vue-web/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robin/Desktop/心航/vue-web/admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/robin/Desktop/心航/vue-web/admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/robin/Desktop/心航/vue-web/admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}